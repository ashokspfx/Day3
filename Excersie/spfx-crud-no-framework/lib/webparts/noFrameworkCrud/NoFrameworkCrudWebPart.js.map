{"version":3,"sources":["webparts/noFrameworkCrud/NoFrameworkCrudWebPart.ts"],"names":[],"mappings":"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","file":"NoFrameworkCrudWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\nimport { SPHttpClient, SPHttpClientResponse } from '@microsoft/sp-http';\r\nimport { IListItem } from './IListItem';\r\n\r\nimport styles from './NoFrameworkCrudWebPart.module.scss';\r\nimport * as strings from 'NoFrameworkCrudWebPartStrings';\r\n\r\nexport interface INoFrameworkCrudWebPartProps {\r\n  listName: string;\r\n}\r\n\r\nexport default class NoFrameworkCrudWebPart extends BaseClientSideWebPart<INoFrameworkCrudWebPartProps> {\r\n  private listItemEntityTypeName: string = undefined;\r\n\r\n  public render(): void {\r\n    this.domElement.innerHTML = `\r\n      <div class=\"${ styles.noFrameworkCrud }\">\r\n        <div class=\"${ styles.container }\">\r\n          <div class=\"${ styles.row }\">\r\n            <div class=\"${ styles.column }\">\r\n              <span class=\"${ styles.title }\">CRUD operations</span>\r\n              <p class=\"${ styles.subTitle }\">No Framework</p>\r\n              <p class=\"${ styles.description }\">Name: ${escape(this.properties.listName)}</p>\r\n\r\n              <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n                <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n                  <button class=\"${styles.button} create-Button\">\r\n                    <span class=\"${styles.label}\">Create item</span>\r\n                  </button>\r\n                  <button class=\"${styles.button} read-Button\">\r\n                    <span class=\"${styles.label}\">Read item</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n                <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n                  <button class=\"${styles.button} update-Button\">\r\n                    <span class=\"${styles.label}\">Update item</span>\r\n                  </button>\r\n                  <button class=\"${styles.button} delete-Button\">\r\n                    <span class=\"${styles.label}\">Delete item</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n                <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n                  <div class=\"status\"></div>\r\n                  <ul class=\"items\"><ul>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n\r\n      this.setButtonsEventHandlers();\r\n  }\r\n\r\n  private setButtonsEventHandlers(): void {\r\n    const webPart: NoFrameworkCrudWebPart = this;\r\n    this.domElement.querySelector('button.create-Button').addEventListener('click', () => { webPart.createItem(); });\r\n    this.domElement.querySelector('button.read-Button').addEventListener('click', () => { webPart.readItem(); });\r\n    this.domElement.querySelector('button.update-Button').addEventListener('click', () => { webPart.updateItem(); });\r\n    this.domElement.querySelector('button.delete-Button').addEventListener('click', () => { webPart.deleteItem(); });\r\n  }\r\n\r\n  private createItem(): void {\r\n    const body: string = JSON.stringify({\r\n      'Title': `Item ${new Date()}`\r\n    });\r\n\r\n    this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${this.properties.listName}')/items`,\r\n    SPHttpClient.configurations.v1,\r\n    {\r\n      headers: {\r\n        'Accept': 'application/json;odata=nometadata',\r\n        'Content-type': 'application/json;odata=nometadata',\r\n        'odata-version': ''\r\n      },\r\n      body: body\r\n    })\r\n    .then((response: SPHttpClientResponse): Promise<IListItem> => {\r\n      return response.json();\r\n    })\r\n    .then((item: IListItem): void => {\r\n      this.updateStatus(`Item '${item.Title}' (ID: ${item.Id}) successfully created`);\r\n    }, (error: any): void => {\r\n      this.updateStatus('Error while creating the item: ' + error);\r\n    });\r\n  }\r\n\r\n  private updateStatus(status: string, items: IListItem[] = []): void {\r\n    this.domElement.querySelector('.status').innerHTML = status;\r\n    this.updateItemsHtml(items);\r\n  }\r\n\r\n  private updateItemsHtml(items: IListItem[]): void {\r\n    this.domElement.querySelector('.items').innerHTML = items.map(item => `<li>${item.Title} (${item.Id})</li>`).join(\"\");\r\n  }\r\n\r\n  private readItem(): void {\r\n    this.getLatestItemId()\r\n      .then((itemId: number): Promise<SPHttpClientResponse> => {\r\n        if (itemId === -1) {\r\n          throw new Error('No items found in the list');\r\n        }\r\n\r\n        this.updateStatus(`Loading information about item ID: ${itemId}...`);\r\n        \r\n        return this.context.spHttpClient.get(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${this.properties.listName}')/items(${itemId})?$select=Title,Id`,\r\n          SPHttpClient.configurations.v1,\r\n          {\r\n            headers: {\r\n              'Accept': 'application/json;odata=nometadata',\r\n              'odata-version': ''\r\n            }\r\n          });\r\n      })\r\n      .then((response: SPHttpClientResponse): Promise<IListItem> => {\r\n        return response.json();\r\n      })\r\n      .then((item: IListItem): void => {\r\n        this.updateStatus(`Item ID: ${item.Id}, Title: ${item.Title}`);\r\n      }, (error: any): void => {\r\n        this.updateStatus('Loading latest item failed with error: ' + error);\r\n      });\r\n  }\r\n\r\n  private updateItem(): void {\r\n    let latestItemId: number = undefined;\r\n    this.updateStatus('Loading latest item...');\r\n\r\n    this.getLatestItemId()\r\n      .then((itemId: number): Promise<SPHttpClientResponse> => {\r\n        if (itemId === -1) {\r\n          throw new Error('No items found in the list');\r\n        }\r\n\r\n        latestItemId = itemId;\r\n        this.updateStatus(`Loading information about item ID: ${itemId}...`);\r\n        \r\n        return this.context.spHttpClient.get(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${this.properties.listName}')/items(${latestItemId})?$select=Title,Id`,\r\n          SPHttpClient.configurations.v1,\r\n          {\r\n            headers: {\r\n              'Accept': 'application/json;odata=nometadata',\r\n              'odata-version': ''\r\n            }\r\n          });\r\n      })\r\n      .then((response: SPHttpClientResponse): Promise<IListItem> => {\r\n        return response.json();\r\n      })\r\n      .then((item: IListItem): void => {\r\n        this.updateStatus(`Item ID1: ${item.Id}, Title: ${item.Title}`);\r\n\r\n        const body: string = JSON.stringify({\r\n          'Title': `Updated Item ${new Date()}`\r\n        });\r\n\r\n        this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${this.properties.listName}')/items(${item.Id})`,\r\n          SPHttpClient.configurations.v1,\r\n          {\r\n            headers: {\r\n              'Accept': 'application/json;odata=nometadata',\r\n              'Content-type': 'application/json;odata=nometadata',\r\n              'odata-version': '',\r\n              'IF-MATCH': '*',\r\n              'X-HTTP-Method': 'MERGE'\r\n            },\r\n            body: body\r\n          })\r\n          .then((response: SPHttpClientResponse): void => {\r\n            this.updateStatus(`Item with ID: ${latestItemId} successfully updated`);\r\n          }, (error: any): void => {\r\n            this.updateStatus(`Error updating item: ${error}`);\r\n          });\r\n      });\r\n  }\r\n\r\n  private deleteItem(): void {\r\n    if (!window.confirm('Are you sure you want to delete the latest item?')) {\r\n      return;\r\n    }\r\n\r\n    this.updateStatus('Loading latest items...');\r\n    let latestItemId: number = undefined;\r\n    let etag: string = undefined;\r\n    this.getLatestItemId()\r\n      .then((itemId: number): Promise<SPHttpClientResponse> => {\r\n        if (itemId === -1) {\r\n          throw new Error('No items found in the list');\r\n        }\r\n\r\n        latestItemId = itemId;\r\n        this.updateStatus(`Loading information about item ID: ${latestItemId}...`);\r\n        return this.context.spHttpClient.get(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${this.properties.listName}')/items(${latestItemId})?$select=Id`,\r\n          SPHttpClient.configurations.v1,\r\n          {\r\n            headers: {\r\n              'Accept': 'application/json;odata=nometadata',\r\n              'odata-version': ''\r\n            }\r\n          });\r\n      })\r\n      .then((response: SPHttpClientResponse): Promise<IListItem> => {\r\n        etag = response.headers.get('ETag');\r\n        return response.json();\r\n      })\r\n      .then((item: IListItem): Promise<SPHttpClientResponse> => {\r\n        this.updateStatus(`Deleting item with ID: ${latestItemId}...`);\r\n        return this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${this.properties.listName}')/items(${item.Id})`,\r\n          SPHttpClient.configurations.v1,\r\n          {\r\n            headers: {\r\n              'Accept': 'application/json;odata=nometadata',\r\n              'Content-type': 'application/json;odata=verbose',\r\n              'odata-version': '',\r\n              'IF-MATCH': etag,\r\n              'X-HTTP-Method': 'DELETE'\r\n            }\r\n          });\r\n      })\r\n      .then((response: SPHttpClientResponse): void => {\r\n        this.updateStatus(`Item with ID: ${latestItemId} successfully deleted`);\r\n      }, (error: any): void => {\r\n        this.updateStatus(`Error deleting item: ${error}`);\r\n      });\r\n  }\r\n\r\n  private getLatestItemId(): Promise<number> {\r\n    return new Promise<number>((resolve: (itemId: number) => void, reject: (error: any) => void): void => {\r\n      this.context.spHttpClient.get(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${this.properties.listName}')/items?$orderby=Id desc&$top=1&$select=id`,\r\n        SPHttpClient.configurations.v1,\r\n        {\r\n          headers: {\r\n            'Accept': 'application/json;odata=nometadata',\r\n            'odata-version': ''\r\n          }\r\n        })\r\n        .then((response: SPHttpClientResponse): Promise<{ value: { Id: number }[] }> => {\r\n          return response.json();\r\n        }, (error: any): void => {\r\n          reject(error);\r\n        })\r\n        .then((response: { value: { Id: number }[] }): void => {\r\n          if (response.value.length === 0) {\r\n            resolve(-1);\r\n          }\r\n          else {\r\n            resolve(response.value[0].Id);\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('listName', {\r\n                  label: strings.ListNameFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"../../../../../src"}